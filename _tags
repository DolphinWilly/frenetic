# OASIS_START
# DO NOT EDIT (digest: f8c0885d2cc040e3955befd90b12f130)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library frenetic
"lib/frenetic.cmxs": use_frenetic
<lib/*.ml{,i,y}>: package(async)
<lib/*.ml{,i,y}>: package(base64)
<lib/*.ml{,i,y}>: package(camlp4)
<lib/*.ml{,i,y}>: package(camlp4.extend)
<lib/*.ml{,i,y}>: package(camlp4.lib)
<lib/*.ml{,i,y}>: package(core)
<lib/*.ml{,i,y}>: package(cstruct)
<lib/*.ml{,i,y}>: package(cstruct.syntax)
<lib/*.ml{,i,y}>: package(fieldslib)
<lib/*.ml{,i,y}>: package(fieldslib.syntax)
<lib/*.ml{,i,y}>: package(ocamlgraph)
<lib/*.ml{,i,y}>: package(sexplib)
<lib/*.ml{,i,y}>: package(sexplib.syntax)
<lib/*.ml{,i,y}>: package(str)
<lib/*.ml{,i,y}>: package(tcpip)
<lib/*.ml{,i,y}>: package(threads)
<lib/*.ml{,i,y}>: package(ulex)
<lib/*.ml{,i,y}>: package(yojson)
# Executable probnetkat
"examples/probnetkat/Test.byte": package(async)
"examples/probnetkat/Test.byte": package(base64)
"examples/probnetkat/Test.byte": package(camlp4)
"examples/probnetkat/Test.byte": package(camlp4.extend)
"examples/probnetkat/Test.byte": package(camlp4.lib)
"examples/probnetkat/Test.byte": package(core)
"examples/probnetkat/Test.byte": package(cstruct)
"examples/probnetkat/Test.byte": package(cstruct.syntax)
"examples/probnetkat/Test.byte": package(fieldslib)
"examples/probnetkat/Test.byte": package(fieldslib.syntax)
"examples/probnetkat/Test.byte": package(ocamlgraph)
"examples/probnetkat/Test.byte": package(sexplib)
"examples/probnetkat/Test.byte": package(sexplib.syntax)
"examples/probnetkat/Test.byte": package(str)
"examples/probnetkat/Test.byte": package(tcpip)
"examples/probnetkat/Test.byte": package(threads)
"examples/probnetkat/Test.byte": package(ulex)
"examples/probnetkat/Test.byte": package(yojson)
"examples/probnetkat/Test.byte": use_frenetic
<examples/probnetkat/*.ml{,i,y}>: package(async)
<examples/probnetkat/*.ml{,i,y}>: package(base64)
<examples/probnetkat/*.ml{,i,y}>: package(camlp4)
<examples/probnetkat/*.ml{,i,y}>: package(camlp4.extend)
<examples/probnetkat/*.ml{,i,y}>: package(camlp4.lib)
<examples/probnetkat/*.ml{,i,y}>: package(core)
<examples/probnetkat/*.ml{,i,y}>: package(cstruct)
<examples/probnetkat/*.ml{,i,y}>: package(cstruct.syntax)
<examples/probnetkat/*.ml{,i,y}>: package(fieldslib)
<examples/probnetkat/*.ml{,i,y}>: package(fieldslib.syntax)
<examples/probnetkat/*.ml{,i,y}>: package(ocamlgraph)
<examples/probnetkat/*.ml{,i,y}>: package(sexplib)
<examples/probnetkat/*.ml{,i,y}>: package(sexplib.syntax)
<examples/probnetkat/*.ml{,i,y}>: package(str)
<examples/probnetkat/*.ml{,i,y}>: package(tcpip)
<examples/probnetkat/*.ml{,i,y}>: package(threads)
<examples/probnetkat/*.ml{,i,y}>: package(ulex)
<examples/probnetkat/*.ml{,i,y}>: package(yojson)
<examples/probnetkat/*.ml{,i,y}>: use_frenetic
# OASIS_STOP
<packet/lib/*.ml>: syntax_camlp4o
<packet/test/*.ml>: syntax_camlp4o
<openflow/lib/*.ml{,i}>: syntax_camlp4o
<openflow/async/*.ml{,i}>: syntax_camlp4o
<openflow/test/*.ml{,i}>: syntax_camlp4o
<openflow/examples/*.ml{,i}>: syntax_camlp4o
<test/*.ml>: syntax_camlp4o
<lib/*.ml{,i}>: syntax_camlp4o
<async/*.ml>: syntax_camlp4o
<syntax/*.ml>: syntax_camlp4o
true: thread
true: -traverse
